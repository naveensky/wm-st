@model StudentTracker.Site.ViewModels.Student.StudentEditViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>
    Edit Details for @Model.StudentViewModel.Name
</h2>
@using (Html.BeginForm()) {
    <fieldset>
        <legend>Edit Student</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.CourseId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CourseId, new SelectList(Model.Courses, "Key", "Value"), new { disabled = true })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StudyCenterId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.StudyCenterId, new SelectList(Model.StudyCenters, "Key", "Value"))
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StudentViewModel.Name)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(m => m.StudentViewModel.Id)
            @Html.TextBoxFor(model => model.StudentViewModel.Name, new { disabled = true })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StudentViewModel.Roll)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.StudentViewModel.Roll, new { disabled = true })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StudentViewModel.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentViewModel.Email)
            @Html.ValidationMessageFor(model => model.StudentViewModel.Email)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StudentViewModel.Mobile)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentViewModel.Mobile)
            @Html.ValidationMessageFor(model => model.StudentViewModel.Mobile)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StudentViewModel.ProposedExamDate)
        </div>
        <div class="editor-field">
            <input type="text" value='@string.Format("{0:dd MMM yyyy}", Model.StudentViewModel.ProposedExamDate)' disabled="disabled" />
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StudentViewModel.ActualExamDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.StudentViewModel.ActualExamDate, new { @class = "date" })
            @*<input type="text" class="date" name="Student_ActualExamDate" value='@string.Format("{0:dd MMM yyyy}", Model.Student.ActualExamDate)'/>*@
            @Html.ValidationMessageFor(model => model.StudentViewModel.ActualExamDate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StudentViewModel.Score)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentViewModel.Score)
            @Html.ValidationMessageFor(model => model.StudentViewModel.Score)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentViewModel.SoftwareGiven) @Html.LabelFor(model => model.StudentViewModel.SoftwareGiven)
            @Html.ValidationMessageFor(model => model.StudentViewModel.SoftwareGiven)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.StudentViewModel.WmPrepUsername)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentViewModel.WmPrepUsername)
            @Html.ValidationMessageFor(model => model.StudentViewModel.WmPrepUsername)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StudentViewModel.BooksGiven) @Html.LabelFor(model => model.StudentViewModel.BooksGiven)
            @Html.ValidationMessageFor(model => model.StudentViewModel.BooksGiven)
        </div>
        <p>
            <input type="submit" value="Update" />
        </p>
    </fieldset>
}